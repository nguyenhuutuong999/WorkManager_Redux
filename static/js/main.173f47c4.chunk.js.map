{"version":3,"sources":["actions/index.js","constants/ActionType.js","components/TaskForm.js","components/TaskSearchControl.js","components/TaskSortControl.js","components/TaskControl.js","components/TaskItems.js","components/TaskList.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/filterForm.js","reducers/itemEditing.js","reducers/searchTask.js","reducers/sortTask.js","reducers/index.js","index.js"],"names":["editTask","task","type","TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCloseForm","onChange","event","target","name","value","setState","defineProperty","onSubmit","preventDefault","onAddTask","state","onClear","status","id","itemEditing","nextProps","isDisplayForm","react_default","a","createElement","className","aria-hidden","onClick","Component","connect","dispatch","actions","taskSearchControl","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","by","_this2","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","href","sort","sortTask","Control","TaskSearchControl","TaskSortControl","TaskItems","onUpdateStatus","tasks","onDelete","onDeleteForm","onEditTask","onOpenFrom","_this$props","index","TaskList","filter","filterName","filterStatus","onFilterTable","filterForm","_this$state","toLowerCase","indexOf","b","elmTask","map","components_TaskItems","key","searchTask","App","onToggleForm","onOpenForm","onClearTask","components_TaskForm","TaskControl","components_TaskList","Boolean","window","location","hostname","match","data","JSON","parse","localStorage","getItem","initialState","s4","Math","floor","random","toString","substring","findIndex","result","forEach","myReducer","arguments","length","undefined","action","push","setItem","stringify","toConsumableArray","objectSpread","splice","parseInt","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.173f47c4.chunk.js","sourcesContent":["import * as types from '../constants/ActionType';\r\n\r\nexport const listAll = () => {\r\n    return {\r\n        type : types.LIST_ALL,\r\n    };\r\n};\r\nexport const saveTask = (task) =>{\r\n    return {\r\n        type: types.SAVE_TASK,\r\n        task,\r\n    }\r\n}\r\nexport const toggleForm = () =>{\r\n    return {\r\n        type: types.TOGGLE_FORM\r\n    }\r\n}\r\nexport const closeForm = () =>{\r\n    return {\r\n        type: types.CLOSE_FORM\r\n    }\r\n}\r\nexport const openForm = () =>{\r\n    return {\r\n        type: types.OPEN_FORM\r\n    }\r\n}\r\nexport const updateStatus = (id) =>{\r\n    return {\r\n        type: types.UPDATE_STATUS,\r\n        id,\r\n    }\r\n}  \r\nexport const deleteTask = (id) =>{\r\n    return {\r\n        type: types.DELETE_TASK,\r\n        id,\r\n    }\r\n} \r\nexport const editTask = (task) =>{\r\n    return {\r\n        type: types.EDIT_TASK,\r\n        task,\r\n    }\r\n}\r\nexport const filterForm = (filter) =>{\r\n    return {\r\n        type: types.FILTER_FORM,\r\n        filter,\r\n    }\r\n}\r\nexport const searchTask = (keyword) =>{\r\n    return {\r\n        type: types.SEARCH,\r\n        keyword,\r\n    }\r\n}\r\nexport const sortTask = (sort) =>{\r\n    return {\r\n        type: types.SORT,\r\n        sort,\r\n    }\r\n}","export const LIST_ALL = 'LIST_ALL';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const FILTER_FORM =  'FILTER_FORM';\r\nexport const SEARCH =  'SEARCH';\r\nexport const SORT =  'SORT';\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      status : false,\r\n    } \r\n  }\r\n  \r\n  componentWillMount(){\r\n    if(this.props.itemEditing && this.props.itemEditing.id !== null){\r\n      this.setState({\r\n        id: this.props.itemEditing.id,\r\n        name: this.props.itemEditing.name,\r\n        status: this.props.itemEditing.status,\r\n      });\r\n    }\r\n    else {\r\n      this.onClear();\r\n    }\r\n    \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.itemEditing){\r\n      this.setState({\r\n        id: nextProps.itemEditing.id,\r\n        name: nextProps.itemEditing.name,\r\n        status: nextProps.itemEditing.status,\r\n      });\r\n    }else{\r\n      this.onClear();\r\n    }\r\n    \r\n  }\r\n\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  }\r\n\r\n  onChange = (event) =>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value  = target.value;\r\n    if(name === \"status\"){\r\n      value = target.value === 'true' ? true : false;\r\n    }\r\n    this.setState ({\r\n      [name] : value,\r\n    })\r\n  }\r\n\r\n  onSubmit  = (event) =>{\r\n    event.preventDefault();\r\n    this.props.onAddTask(this.state);\r\n    this.onClear();\r\n    \r\n    this.onCloseForm();\r\n  }\r\n\r\n  onClear = () =>{\r\n    this.setState({\r\n      name : '',\r\n      status: false,\r\n    });\r\n  }\r\n  render() {\r\n    if(!this.props.isDisplayForm) return null; \r\n\r\n    \r\n    return (\r\n      <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">{this.state.id ? \"Update Work\" : \"Add Work\" } &nbsp;<i className=\"fa fa-times-circle l\" aria-hidden=\"true\" onClick={this.onCloseForm}></i>\r\n          </h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit = {this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"name\" value = {this.state.name} onChange = {this.onChange}></input>\r\n            </div>\r\n            <label>Status</label>\r\n            <select className=\"form-control\" name = \"status\"  value = {this.state.status} onChange = {this.onChange}>\r\n              <option value={true}>Active</option>\r\n              <option value={false}>Hiden</option>\r\n            </select><br />\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-warning m-10 fa fa-plus\">  Save\r\n                        </button>\r\n\r\n              <button onClick = {this.onClear} \r\n              type=\"button\" \r\n              className=\"btn btn-danger m-10 ml-5\"> \r\n              <i className=\"fa fa-close\" aria-hidden=\"true\"></i>  C\r\n              ancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    ) \r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    isDisplayForm: state.isDisplayForm,\r\n    itemEditing: state.itemEditing,\r\n    \r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n    return {\r\n      onAddTask : (task) =>{\r\n        dispatch(actions.saveTask(task));\r\n      },\r\n      onCloseForm :() =>{\r\n        dispatch(actions.closeForm());\r\n      },\r\n     \r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nclass taskSearchControl extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            keyword : \"\"\r\n        });\r\n    }\r\n    onChange = (event) =>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        \r\n       this.setState({\r\n           [name] : value,\r\n       });\r\n       \r\n      }\r\n      onSearch = () =>{\r\n          this.props.onSearch(this.state.keyword);\r\n      }\r\n    render() {\r\n         var {keyword} = this.state;\r\n        return (\r\n            <div className=\"group-input\">\r\n\r\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 dp\">\r\n\r\n                    <input \r\n                    name=\"keyword\" \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Nhập từ khóa...\" \r\n                    value = {keyword}\r\n                    onChange = {this.onChange}\r\n                    />\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-success fa fa-search\"\r\n                    onClick = {this.onSearch}>  Search</button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      \r\n    }\r\n  }\r\n  const mapDispatchToProps = (dispatch, props) =>{\r\n    return {\r\n      onSearch : (keyword) => {\r\n        dispatch(actions.searchTask(keyword));\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(taskSearchControl);","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nclass Sort extends Component {\r\n   \r\n    onClick = (sortBy, sortValue) =>{\r\n        this.props.onSort({\r\n            by: sortBy,\r\n            value: sortValue,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                \r\n                <div className=\"dropdown\">\r\n                    <button\r\n                        className=\"btn btn-primary dropdown-toggle\"\r\n                        type=\"button\"\r\n                        id=\"dropdownMenu1\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\"\r\n                    >\r\n                        Sắp Xếp <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick = {() =>this.onClick(\"name\",1)}>\r\n                            <a role=\"button\" href =\"#asc\">\r\n                                <i className=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i>\r\n                                Tên A-Z \r\n                                <i className = {(this.props.sort.by === \"name\" && this.props.sort.value === 1)? \"fa fa-check\" : \"\"} aria-hidden=\"true\"></i>\r\n                            </a>\r\n                            \r\n                        </li>\r\n                        <li onClick = {() =>this.onClick(\"name\",-1)}>\r\n                            <a role=\"button\" href =\"#desc\">\r\n                                <i className=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i>\r\n                                Tên Z-A\r\n                                <i className = {(this.props.sort.by === \"name\" && this.props.sort.value === -1)? \"fa fa-check\" : \"\"} aria-hidden=\"true\"></i>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li onClick = {() =>this.onClick(\"status\",1)}>\r\n                            <a role=\"button\" href =\"#active\">\r\n                                Trạng Thái Kích Hoạt\r\n                                <i className = {(this.props.sort.by === \"status\" && this.props.sort.value === 1)? \"fa fa-check\" : \"\"} aria-hidden=\"true\"></i>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick = {() =>this.onClick(\"status\",-1)}>\r\n                            <a role=\"button\" href =\"#hiden\">\r\n                                Trạng Thái Ẩn\r\n                                <i className = {(this.props.sort.by === \"status\" && this.props.sort.value === -1)? \"fa fa-check\" : \"\"} aria-hidden=\"true\"></i>\r\n                             </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n       \r\n    \r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      sort : state.sortTask,\r\n    }\r\n  }\r\n  const mapDispatchToProps = (dispatch, props) =>{\r\n    return {\r\n      onSort : (sort) => {\r\n        dispatch(actions.sortTask(sort));\r\n      },\r\n     \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Sort);\r\n","import React, { Component } from 'react';\r\nimport Search from './TaskSearchControl';\r\nimport Sort from './TaskSortControl';\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n           <Search />\r\n           <Sort/>\r\n            \r\n        </div>\r\n    );\r\n    }  \r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass TaskItems extends Component {\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.tasks.id);\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDeleteForm(this.props.tasks.id);\r\n        this.props.onCloseForm(this.props.tasks.id);\r\n    }\r\n    onEditTask = () => { \r\n        // this.props.onUpdate(this.props.tasks.id);\r\n        this.props.onOpenFrom();\r\n        this.props.onEditTask(this.props.tasks);\r\n        \r\n\r\n    }\r\n    render() {\r\n        var { tasks, index } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{tasks.name}</td>\r\n                <td className=\"text-center\">\r\n                    <span\r\n                        onClick={this.onUpdateStatus}\r\n                        className={tasks.status === true ? \"label label-success\" : \"label label-danger\"}>\r\n                        {tasks.status === true ? \"Active\" : \"Hiden\"}</span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n\r\n                    <button onClick={this.onEditTask} type=\"button\" className=\"btn btn-warning ml-5\"><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit</button>\r\n                    <button onClick={this.onDelete} type=\"button\" className=\"btn btn-danger ml-5\"><i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete</button>\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onUpdateStatus: (id) => {\r\n            dispatch(actions.updateStatus(id));\r\n        },\r\n        onDeleteForm: (id) => {\r\n            dispatch(actions.deleteTask(id));\r\n\r\n        },\r\n        onCloseForm: () => {\r\n            dispatch(actions.closeForm());\r\n\r\n        },\r\n        onOpenFrom: () => {\r\n            dispatch(actions.openForm());\r\n        },\r\n        onEditTask: (task) => {\r\n            dispatch(actions.editTask(task));\r\n        },\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItems);\r\n","import React, { Component } from 'react';\r\nimport TaskItems from './TaskItems';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            filterName: '',\r\n            filterStatus: -1\r\n        });\r\n    }\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n\r\n        var filter = {\r\n            name: name === 'filterName' ? value : this.state.filterName,\r\n            status: name === 'filterStatus' ? value : this.state.filterStatus\r\n        };\r\n\r\n        this.props.onFilterTable(filter);\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var { tasks, filterForm, keyword, sort } = this.props;\r\n\r\n        var { filterName, filterStatus } = this.state;\r\n\r\n        if (filterForm.name) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(filterForm.name) !== -1;\r\n            });\r\n        }\r\n\r\n        tasks = tasks.filter((task) => {\r\n            if (filterForm.status === - 1) {\r\n                return task;\r\n            } else {\r\n                return task.status === (filterForm.status === 1 ? true : false);\r\n            }\r\n        });\r\n\r\n        tasks = tasks.filter((task) => {\r\n            return task.name.toLowerCase().indexOf(keyword) !== -1;\r\n        });\r\n\r\n         \r\n        if(sort.by === \"name\"){\r\n            tasks.sort((a,b) =>{\r\n                if(a.name > b.name) return sort.value;\r\n                else if(a.name < b.name) return -sort.value;\r\n                else return 0;\r\n            })\r\n        }else{\r\n            tasks.sort((a,b) =>{\r\n                if(a.status > b.status) return -sort.value;\r\n                else if(a.status < b.status) return sort.value;\r\n                else return 0;\r\n            })\r\n        }\r\n    \r\n\r\n        var elmTask = tasks.map((task, index) => {\r\n            return <TaskItems\r\n                key={task.id}\r\n                index={index}\r\n                tasks={task}\r\n            />\r\n        });\r\n        return (\r\n            <table className=\"table table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Name</th>\r\n                        <th className=\"text-center\">Status</th>\r\n                        <th className=\"text-center\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td><input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"filterName\"\r\n                            value={filterName}\r\n                            onChange={this.onChange}\r\n                        ></input></td>\r\n                        <td>\r\n                            <select\r\n                                value={filterStatus}\r\n                                onChange={this.onChange}\r\n                                className=\"form-control\"\r\n                                name=\"filterStatus\">\r\n                                <option value={-1}>All</option>\r\n                                <option value={0}>Hiden</option>\r\n                                <option value={1}>Active</option>\r\n                            </select>\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {elmTask}\r\n\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.tasks,\r\n        filterForm: state.filterForm,\r\n        keyword: state.searchTask,\r\n        sort: state.sortTask,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onFilterTable: (filter) => {\r\n            dispatch(actions.filterForm(filter));\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n//import _ from 'lodash';\n\nclass App extends Component {\n  \n  onToggleForm = () => {\n    var { itemEditing } = this.props;\n    if (itemEditing && itemEditing.id !== \"\") {\n      this.props.onOpenForm();\n\n    } else {\n      this.props.onToggleForm();\n    }\n    this.props.onClearTask({\n      id: \"\",\n      name: \"\",\n      status: false,\n    });\n  }\n\n  render() {\n\n    var { isDisplayForm } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Work Management</h1>\n          <hr></hr>\n        </div>\n\n        <div className=\"row\">\n          <div className={isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"  \"}>\n            <TaskForm />\n          </div>\n\n          {/* Search-Sort */}\n          <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button type=\"button\" className=\"btn btn-primary ml-5\" onClick={this.onToggleForm}>\n              <i className=\"fa fa-plus\" aria-hidden=\"true\">\n              </i> Add Work\n            </button>\n\n            <Control />\n\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\n                <TaskList />\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  }\n}\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../constants/ActionType';\r\n\r\nvar data = JSON.parse(localStorage.getItem('tasks'));\r\nvar initialState = data ? data : [];\r\n\r\nvar s4 = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n  }\r\nvar generateID = () => {\r\n    return s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4();\r\n}\r\n\r\nvar findIndex = (id, tasks) => {\r\n   \r\n    var result = -1;\r\n\r\n    tasks.forEach((task, index) => {\r\n      if (task.id === id) {\r\n        result = index;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\nvar myReducer = (state = initialState, action) =>{\r\n  var id = '';\r\n  var index = -1;\r\n    switch(action.type){\r\n        case types.LIST_ALL:\r\n            return state;\r\n        case types.SAVE_TASK:{ \r\n            var task = {\r\n                id : action.task.id, \r\n                name: action.task.name,\r\n                status: action.task.status,\r\n            }\r\n            if(!task.id){\r\n              task.id = generateID();\r\n              state.push(task);\r\n            }else{\r\n              index = findIndex(task.id, state);\r\n              state[index] = task;\r\n            }\r\n            \r\n            localStorage.setItem('tasks', JSON.stringify(state));\r\n\r\n            return [...state];\r\n        }\r\n        case types.UPDATE_STATUS:{\r\n                id = action.id;\r\n                index = findIndex(id, state);\r\n                \r\n                state[index] = {\r\n                  ...state[index],\r\n                  status: !state[index].status,\r\n\r\n                }\r\n                //state[index].status = !state[index].status;\r\n                localStorage.setItem('tasks', JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n        case types.DELETE_TASK:{\r\n            id = action.id;\r\n            index = findIndex(id, state);\r\n            state.splice(index, 1);\r\n            localStorage.setItem('tasks', JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as types from '../constants/ActionType';\r\n\r\nvar initialState = false;\r\n\r\n\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case types.TOGGLE_FORM:{\r\n            return !state;\r\n        }\r\n        case types.OPEN_FORM:{\r\n            return true;\r\n        }\r\n        case types.CLOSE_FORM:{\r\n            return false;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport default myReducer; ","import * as types from '../constants/ActionType';\r\n\r\nvar initialState = {\r\n    name: \"\",\r\n    status: -1,\r\n};\r\n\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case types.FILTER_FORM : {\r\n            action.filter.status = parseInt(action.filter.status);\r\n            return action.filter;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport default myReducer; ","import * as types from '../constants/ActionType';\r\n\r\nvar initialState = {\r\n    id: \"\",\r\n    name: \"\",\r\n    status: false,\r\n};\r\n\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case types.EDIT_TASK : {\r\n            return action.task;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport default myReducer; ","import * as types from '../constants/ActionType';\r\n\r\nvar initialState = \"\";\r\n\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case types.SEARCH : {\r\n            return action.keyword;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport default myReducer; ","import * as types from '../constants/ActionType';\r\n\r\nvar initialState = {\r\n    by: \"name\",\r\n    value :1,\r\n};\r\n\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case types.SORT : {\r\n            \r\n            return{\r\n                by: action.sort.by,\r\n                value: action.sort.value,\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\nexport default myReducer; ","import {combineReducers} from 'redux';\r\nimport tasks from './tasks';\r\nimport isDisplayForm from './isDisplayForm';\r\nimport filterForm from './filterForm';\r\nimport itemEditing from './itemEditing';\r\nimport searchTask from './searchTask';\r\nimport sortTask from './sortTask';\r\n\r\nconst myReducer = combineReducers({\r\n    tasks, // tasks: tasks\r\n    isDisplayForm,\r\n    itemEditing,\r\n    filterForm,\r\n    searchTask,\r\n    sortTask\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport myReducer from './reducers/index';\n\nconst store = createStore(\n    myReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n\n    );\n\nReactDOM.render(\n<Provider store = {store}>\n    <App/>\n</Provider>, \ndocument.getElementById('root')\n);\nserviceWorker.unregister();\n    "],"sourceRoot":""}